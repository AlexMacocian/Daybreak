# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
# This pipeline builds the Wpf project, runs unit tests, then saves the MSIX build artifact.
name:  Daybreak CD Pipeline

# Trigger on every master branch push and pull request
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:

    strategy:
      matrix:
        targetplatform: [x64]

    runs-on: windows-latest

    env:
      Configuration: Release
      Solution_Path: Daybreak.sln
      Test_Project_Path: Daybreak.Tests\Daybreak.Tests.csproj
      Wpf_Project_Path: Daybreak\Daybreal.csproj
      Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.202'

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.1

    # Restore the application
    - name:  Restore the Wpf application to populate the obj folder
      run: msbuild $env:Solution_Path /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
      env:
        Configuration: Release
        RuntimeIdentifier: win-${{ matrix.targetplatform }}

    # Build Daybreak project
    - name: Build Daybreak project
      run: dotnet build Daybreak -c $env:Configuration

    - name: Set version variable
      run: |
        Import-Module .\Scripts\GetBuildVersion.ps1
        $version = GetBuildVersion
        echo "Version=$version" >> $env
        Write-Host $env

    # Create release binaries
    - name: Create release binaries
      run: |
        Import-Module .\Scripts\BuildRelease.ps1
        BuildRelease -version $env:Version
      shell: pwsh
    